/*
 * Copyright (c) 2024-2025 XDay
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */


/*
    This file is auto generated by tool. if modify manually, you need remove [SLGSerializationClassAttribute] from class definition in case of being overridden!!!
*/

using XDay;


internal partial class Test
{
    public void Load(IDeserializer reader, string label)
    {
        int classVersion = reader.ReadInt32("Test.Version");




        if (classVersion >= 1)
        {
            m_IntField = reader.ReadInt32("Int Field");
        }
        else
        {
            m_IntField = default;
        }


        if (classVersion >= 1)
        {
            m_IntListFields = reader.ReadInt32List("Int Fields");
        }
        else
        {
            m_IntListFields = new();
        }


        if (classVersion >= 1)
        {
            m_TestObjectListFields = reader.ReadList("Test Object List Fields", (index) =>
                {
                    var obj = new TestObject();
                    reader.ReadStructure($"m_TestObjectListFields {index}", () =>
                    {
                        obj.Load(reader, "");
                    });
                    return obj;
                });
        }
        else
        {
            m_TestObjectListFields = new();
        }


        if (classVersion >= 1)
        {
            intArray = reader.ReadInt32Array("Test int Array Fields");
        }
        else
        {
            intArray = null;
        }


        m_Obj2 = new();
        if (classVersion >= 1)
        {
            reader.ReadStructure("Test Object2", () =>
            {
                m_Obj2.Load(reader, "");
            });
        }


    }
}

